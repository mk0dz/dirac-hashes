[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "numpy>=1.18.0; python_version<'3.10'",
    "numpy>=1.21.0; python_version>='3.10'",
    "scipy>=1.4.0; python_version<'3.10'",
    "scipy>=1.8.0; python_version>='3.10'",
    "cython>=0.29.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "dirac-hashes"
version = "0.1.4"  # This will be updated by the CI/CD workflow
authors = [
    {name = "mk0dz", email = "Mukulpal108@hotmail.com"},
]
description = "Quantum-resistant hash functions and post-quantum cryptography for blockchain"
readme = "README.md"
requires-python = ">=3.7"
keywords = ["quantum", "cryptography", "hash", "signatures", "blockchain"]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.18.0; python_version<'3.10'",
    "numpy>=1.21.0; python_version>='3.10'",
    "scipy>=1.4.0; python_version<'3.10'",
    "scipy>=1.8.0; python_version>='3.10'",
    "numba>=0.50.0",
]

[project.urls]
Homepage = "https://github.com/mk0dz/dirac-hashes"
Documentation = "https://dirac-hashes.vercel.app/"
Repository = "https://github.com/mk0dz/dirac-hashes.git"
"Bug Tracker" = "https://github.com/mk0dz/dirac-hashes/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.cibuildwheel]
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*"]
skip = "*-musllinux*"
archs = "auto"
before-build = "pip install --only-binary=numpy,scipy numpy scipy"
environment = "PIP_PREFER_BINARY=1"
test-requires = ["pytest"]
test-command = "pytest {project}/tests/"
build-verbosity = 3 